import "../fonts/BuenosAires-SemiBold.otf";
import "../fonts/BuenosAires-Regular.otf";

import {Palette, Utils} from "common.60";

export TimerPage := Rectangle {
    visible: false;
    callback backClicked;

    Image {
        source: @image-url("../assets/clock-btn-back-active.svg");
        width: 80px;
        height: width;
        x: 10px;
        y: 20px;

        TouchArea { 
            clicked => { root.backClicked(); }
        }
    }

    Text {
        text: "Timer";
        color: Palette.normal-color;
        font-size: 30px;
        x: (parent.width / 2) - (self.width / 2);
        y: 40px;
    }

    Rectangle { 
        width: 418px;
        height: 1px;
        background: Palette.normal-color;
        x: (parent.width / 2) - (self.width / 2);
        y: 100px;
    }

    Rectangle {
        x: 28px;
        y: 160px;

        width: 190px;
        height: 280px;
        background: #1B2F46;
        border-radius: 30px;
        drop-shadow-offset-x: 10px;
        drop-shadow-offset-y: 20px;

        Text {
            x: 21px;
            y: 50px;
            width: parent.width;
            height: 200px;
            font-size: 120px;
            color: Palette.foreground-color;
            text: "00";
        }
    }

    Rectangle {
        x: 262px;
        y: 160px;

        width: 190px;
        height: 280px;
        background: #1B2F46;
        border-radius: 30px;
        drop-shadow-offset-x: 10px;
        drop-shadow-offset-y: 20px;


        Text {
            x: 21px;
            y: 50px;
            width: parent.width;
            height: 200px;
            font-size: 120px;
            color: Palette.foreground-color;
            text: "00";
        }
    }

    Image {
        source: @image-url("../assets/clock-btn-arrow.svg");
        width: 150px;
        height: 100px;
        x: 50px;
        y: 476px;

        TouchArea { 
            // clicked => { root.backClicked(); }
        }
    }

    Image {
        source: @image-url("../assets/clock-btn-arrow-down.png");
        width: 150px;
        height: 100px;
        x: 48px;
        y: 530px;

        TouchArea { 
            // clicked => { root.backClicked(); }
        }
    }

    Image {
        source: @image-url("../assets/clock-btn-arrow.svg");
        width: 150px;
        height: 100px;
        x: 280px;
        y: 476px;

        TouchArea { 
            // clicked => { root.backClicked(); }
        }
    }
    
    Image {
        source: @image-url("../assets/clock-btn-arrow-down.png");
        width: 148px;
        height: 100px;
        x: 280px;
        y: 530px;

        TouchArea { 
            // clicked => { root.backClicked(); }
        }
    }
}


export TimerExpiredPage := Rectangle {
    visible: false;
    callback backClicked();

    Image {
        source: @image-url("../assets/clock-btn-back-active.svg");
        width: 80px;
        height: width;
        x: 10px;
        y: 20px;

        TouchArea { 
            clicked => { root.backClicked(); }
        }
    }

    Text {
        text: "Timer";
        color: Palette.normal-color;
        font-size: 30px;
        x: (parent.width / 2) - (self.width / 2);
        y: 40px;
    }

    Rectangle { 
        width: 418px;
        height: 1px;
        background: Palette.normal-color;
        x: (parent.width / 2) - (self.width / 2);
        y: 100px;
    }

    rect := Rectangle { 
        background: green;
        width: 100px;
        height: 100px;
        // width: 390px;
        // height: width;
        x: (parent.width / 2) - (self.width / 2);
        y: 160px;
        TouchArea { 
            clicked=> {
                mypath.degrees = 0
            }

         }
       
     }
     mypath := Path {
        // x: (parent.width / 2) - (self.width / 2);
        // y: 160px;
        x: (parent.width / 2) - (self.width / 2);
        y: 160px;
        stroke: Palette.foreground-color;
        stroke-width: 4px;
        width: rect.width;
        height: width;
        // Avoid auto-fitting of the shape on the size of the Path
        viewbox-width: width / 1px;
        viewbox-height: height / 1px;
        // clip: true;
        // width: 390px;
        // height: width;
        property<int> degrees: 360;
        animate degrees { duration: 1s; }


       
        MoveTo {
            x: (parent.width / 2) / 1px;
            y: 0;
            // y: parent.height / 1px;

        }
        
        property<int> maxAngle: min(degrees, 180);
        property<int> leftAngle: degrees;
        
        ArcTo {
            radius-x: (parent.width / 2) / 1px;
            radius-y: (parent.height / 2) / 1px;
            large-arc: false;
            sweep: true;
            x: sin(parent.maxAngle * 1deg) * (parent.width /2 / 1px) + (parent.width / 2 / 1px);
            y: -cos(parent.maxAngle * 1deg) * parent.height /2 /1px + (parent.height / 2 / 1px);
        }
        ArcTo {
            radius-x: (parent.width / 2) / 1px;
            radius-y: (parent.height / 2) / 1px;
            large-arc: false;
            sweep: true;
            x: sin(parent.leftAngle * 1deg) * (parent.width /2 / 1px) + (parent.width / 2 / 1px);
            y: -(cos(parent.leftAngle * 1deg) * parent.height /2 /1px - (parent.height / 2 / 1px));
        }

        
    }

}